"'ONLY for Attachment Function: ctrlAttachment' As screen":
    Fill: =Color.White
    LoadingSpinnerColor: =App.Theme.Colors.Primary

    frm_TrainingCourses As form.PowerApps_CoreControls_Form:
        BorderColor: =App.Theme.Colors.Darker40
        DataSource: ='Scoring List'
        Height: =601
        Item: =Evaluations_Gallery.Selected
        UseFluentV9Cards: =true
        Width: =1103
        X: =40
        Y: =40
        ZIndex: =1

        Title_DataCard4 As typedDataCard.fluentV9TextualEditCard:
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="Title"
            Default: =ThisItem.Title
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,Title)
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            MaxLength: =DataSourceInfo([@'Scoring List'], DataSourceInfo.MaxLength, Title)
            Required: =false
            Update: =DataCardValue23.Value
            Width: =367
            X: =0
            Y: =0
            ZIndex: =2

            DataCardKey23 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            "DataCardValue23 As 'Text input'":
                AccessibleLabel: =Parent.DisplayName
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =Parent.DisplayMode
                Fill: =
                FontColor: =
                Height: =32
                Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                Required: =Parent.Required
                TriggerOutput: ="FocusOut"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Value: =Parent.Default
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey23.Y + DataCardKey23.Height + 4
                ZIndex: =2

            ErrorMessage23 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue23.Y + DataCardValue23.Height
                ZIndex: =3

            StarVisible23 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey23.Y
                ZIndex: =4

        "'Bid Name_DataCard1' As typedDataCard.fluentV9TextualEditCard":
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="BidName"
            Default: =ThisItem.'Bid Name'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,'Bid Name')
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            MaxLength: =DataSourceInfo([@'Scoring List'], DataSourceInfo.MaxLength, 'Bid Name')
            Required: =false
            Update: =DataCardValue24.Value
            Width: =367
            X: =1
            Y: =0
            ZIndex: =2

            DataCardKey24 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            "DataCardValue24 As 'Text input'":
                AccessibleLabel: =Parent.DisplayName
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =Parent.DisplayMode
                Fill: =
                FontColor: =
                Height: =32
                Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                Required: =Parent.Required
                TriggerOutput: ="FocusOut"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Value: =Parent.Default
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey24.Y + DataCardKey24.Height + 4
                ZIndex: =2

            ErrorMessage24 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue24.Y + DataCardValue24.Height
                ZIndex: =3

            StarVisible24 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey24.Y
                ZIndex: =4

        "'Supplier Name_DataCard2' As typedDataCard.fluentV9TextualEditCard":
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="SupplierName"
            Default: =ThisItem.'Supplier Name'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,'Supplier Name')
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            MaxLength: =DataSourceInfo([@'Scoring List'], DataSourceInfo.MaxLength, 'Supplier Name')
            Required: =false
            Update: =DataCardValue25.Value
            Width: =367
            X: =2
            Y: =0
            ZIndex: =2

            DataCardKey25 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            "DataCardValue25 As 'Text input'":
                AccessibleLabel: =Parent.DisplayName
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =Parent.DisplayMode
                Fill: =
                FontColor: =
                Height: =32
                Mode: ="'TextInputCanvas.Mode'.TextInputModeSingleLine"
                Required: =Parent.Required
                TriggerOutput: ="FocusOut"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Value: =Parent.Default
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey25.Y + DataCardKey25.Height + 4
                ZIndex: =2

            ErrorMessage25 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue25.Y + DataCardValue25.Height
                ZIndex: =3

            StarVisible25 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey25.Y
                ZIndex: =4

        Evaluator_DataCard1 As typedDataCard.fluentV9ComboBoxEditCard:
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="Evaluator"
            Default: =ThisItem.Evaluator
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,Evaluator)
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            Required: =false
            Update: =DataCardValue27.Selected
            Width: =367
            X: =0
            Y: =1
            ZIndex: =2

            DataCardKey27 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            DataCardValue27 As Combobox.pcfdataset:
                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                DefaultSelectedItems: =[Parent.Default]
                DisplayMode: =Parent.DisplayMode
                Height: =32
                Items: =Choices([@'Scoring List'].Evaluator)
                Required: =false
                TriggerOutput: ="Keypress"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey27.Y + DataCardKey27.Height + 4
                ZIndex: =2

            ErrorMessage27 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue27.Y + DataCardValue27.Height
                ZIndex: =3

            StarVisible27 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =20
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey27.Y
                ZIndex: =4

        "'Technical Score_DataCard1' As typedDataCard.fluentV9NumberEditCard":
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="CommercialScore"
            Default: =ThisItem.'Technical Score'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,'Technical Score')
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            Required: =false
            Update: =Value(DataCardValue28.Value)
            Width: =367
            X: =1
            Y: =1
            ZIndex: =2

            DataCardKey28 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            "DataCardValue28 As 'Text input'":
                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =Parent.DisplayMode
                Fill: =
                FontColor: =
                Height: =32
                TriggerOutput: ="FocusOut"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Value: =Parent.Default
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey28.Y + DataCardKey28.Height + 4
                ZIndex: =2

            ErrorMessage28 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue28.Y + DataCardValue28.Height
                ZIndex: =3

            StarVisible28 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey28.Y
                ZIndex: =4

        "'Technical Criteria Weight_DataCard1' As typedDataCard.fluentV9NumberEditCard":
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="CriteriaWeight"
            Default: =ThisItem.'Technical Criteria Weight'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,'Technical Criteria Weight')
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            Required: =false
            Update: =Value(DataCardValue29.Value)
            Width: =367
            X: =2
            Y: =1
            ZIndex: =2

            DataCardKey29 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            "DataCardValue29 As 'Text input'":
                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =Parent.DisplayMode
                Fill: =
                FontColor: =
                Height: =32
                TriggerOutput: ="FocusOut"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Value: =Parent.Default
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey29.Y + DataCardKey29.Height + 4
                ZIndex: =2

            ErrorMessage29 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue29.Y + DataCardValue29.Height
                ZIndex: =3

            StarVisible29 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey29.Y
                ZIndex: =4

        "'Commercial Score_DataCard1' As typedDataCard.fluentV9NumberEditCard":
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="CommercialScore0"
            Default: =ThisItem.'Commercial Score'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,'Commercial Score')
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            Required: =false
            Update: =Value(DataCardValue30.Value)
            Width: =367
            X: =0
            Y: =2
            ZIndex: =2

            DataCardKey30 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            "DataCardValue30 As 'Text input'":
                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =Parent.DisplayMode
                Fill: =
                FontColor: =
                Height: =32
                TriggerOutput: ="FocusOut"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Value: =Parent.Default
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey30.Y + DataCardKey30.Height + 4
                ZIndex: =2

            ErrorMessage30 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue30.Y + DataCardValue30.Height
                ZIndex: =3

            StarVisible30 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey30.Y
                ZIndex: =4

        "'Commercial Criteria Weight_DataCard1' As typedDataCard.fluentV9NumberEditCard":
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="CommercialCriteriaWeight"
            Default: =ThisItem.'Commercial Criteria Weight'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,'Commercial Criteria Weight')
            Fill: =RGBA(0, 0, 0, 0)
            Height: =70
            Required: =false
            Update: =Value(DataCardValue31.Value)
            Width: =367
            X: =1
            Y: =2
            ZIndex: =2

            DataCardKey31 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =22
                Text: =Parent.DisplayName
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =Parent.Width - 48
                Wrap: =false
                X: =24
                Y: =10
                ZIndex: =1

            "DataCardValue31 As 'Text input'":
                AccessibleLabel: =If(Parent.Required, Substitute("{0}. Required.", "{0}", Parent.DisplayName), Parent.DisplayName)
                BasePaletteColor: =
                BorderColor: =
                DisplayMode: =Parent.DisplayMode
                Fill: =
                FontColor: =
                Height: =32
                TriggerOutput: ="FocusOut"
                ValidationState: =If(IsBlank(Parent.Error), "None", "Error")
                Value: =Parent.Default
                Width: =Parent.Width - 48
                X: =24
                Y: =DataCardKey31.Y + DataCardKey31.Height + 4
                ZIndex: =2

            ErrorMessage31 As Text:
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: =Parent.Error
                Visible: =And(!IsBlank(Parent.Error), Parent.DisplayMode=DisplayMode.Edit)
                Width: =Parent.Width - 48
                Wrap: =true
                X: =24
                Y: =DataCardValue31.Y + DataCardValue31.Height
                ZIndex: =3

            StarVisible31 As Text:
                Align: ='TextCanvas.Align'.Center
                BorderColor: =
                DisplayMode: =DisplayMode.Edit
                Fill: =
                FontColor: =
                Height: =30
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                X: =0
                Y: =DataCardKey31.Y
                ZIndex: =4

        Attachments_DataCard1 As typedDataCard.attachmentsEditCard:
            BorderColor: =App.Theme.Colors.Darker40
            BorderStyle: =BorderStyle.Solid
            DataField: ="{Attachments}"
            Default: =ThisItem.Attachments
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Scoring List'],DataSourceInfo.DisplayName,Attachments)
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =DataCardValue33.Attachments
            Width: =367
            X: =2
            Y: =2
            ZIndex: =2

            DataCardKey33 As label:
                AutoHeight: =true
                Color: =App.Theme.Colors.Darker30
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =App.Theme.Font
                Height: =34
                Size: =13
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            DataCardValue33 As attachments:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                BorderThickness: =2
                DisabledBorderColor: =RGBA(166, 166, 166, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                DisabledFill: =RGBA(244, 244, 244, 1)
                DisplayMode: =Parent.DisplayMode
                FocusedBorderThickness: =4
                Font: =App.Theme.Font
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =App.Theme.Colors.Lighter70
                IsInDataCard: =true
                ItemColor: =RGBA(255, 255, 255, 1)
                ItemFill: =App.Theme.Colors.Primary
                ItemHoverColor: =RGBA(0, 0, 0, 1)
                ItemHoverFill: =App.Theme.Colors.Lighter70
                Items: =ColAttach
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                PressedColor: =RGBA(255, 255, 255, 1)
                PressedFill: =App.Theme.Colors.Darker30
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey33.Y + DataCardKey33.Height + 5
                ZIndex: =2

            ErrorMessage33 As label:
                AutoHeight: =true
                Color: =RGBA(168, 0, 0, 1)
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =App.Theme.Font
                FontWeight: =FontWeight.Semibold
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardValue33.Y + DataCardValue33.Height
                ZIndex: =3

            StarVisible33 As label:
                Align: =Align.Center
                Color: =App.Theme.Colors.Darker30
                DisabledColor: =RGBA(166, 166, 166, 1)
                Font: =App.Theme.Font
                Height: =DataCardKey33.Height
                Size: =13
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey33.Y
                ZIndex: =4

